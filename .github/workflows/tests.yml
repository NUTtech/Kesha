name: autotests

on: [push, pull_request]

jobs:
  autotests:
    runs-on: ubuntu-latest
    container: python:3.8

    services:
      postgres:
        image: postgres:12.3
        env:
          POSTGRES_USER: parrot
          POSTGRES_PASSWORD: parrot
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Install poetry
      run: |
        pip install poetry==1.0.9

    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run autotests
      env:
        PARROT_DB_HOST: postgres
        PARROT_SECRET_KEY: secret
      run: |
        poetry run pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CI_CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true

  lint-check:
    runs-on: ubuntu-latest
    container: python:3.8

    steps:
    - uses: actions/checkout@v2

    - name: Install poetry
      run: |
        pip install poetry==1.0.9

    - name: Set up cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run lint
      run: |
        poetry run flake8 --count
